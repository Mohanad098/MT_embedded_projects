 /******************************************************************************
 *
 * Module: TIMER1
 *
 * File Name: timer1.c
 *
 * Description: Source file for the Timer1 AVR driver
 *
 * Author: Mohanad Hany
 *
 *******************************************************************************/
#include "timer1.h"
#include "std_types.h"
#include <avr/io.h>
#include "common_macros.h"

/* Global variables to hold the address of the call back function in the application */
static volatile void (*g_callBackPtr)(void) = NULL_PTR;

/******************Call back function for normal mode************************/
ISR(TIMER1_OVF_vect)
{
	if(g_callBackPtr != NULL_PTR)
	{
		/* Call the Call Back function in the application after the edge is detected */
		(*g_callBackPtr)(); /* another method to call the function using pointer to function g_callBackPtr(); */
	}
}

/******************Call back function for compare mode************************/
ISR(TIMER1_COMPA_vect)
{
	if(g_callBackPtr != NULL_PTR)
	{
		/* Call the Call Back function in the application after the edge is detected */
		(*g_callBackPtr)(); /* another method to call the function using pointer to function g_callBackPtr(); */
	}
}

void Timer1_init(const Timer1_ConfigType * Config_Ptr){

/************************Mode selection*********************************/

	TCCR1A = ((Config_Ptr->mode)&0b0011)<<WGM10;
	TCCR1B = ((Config_Ptr->mode)&0b1100)<<WGM12;
	TCCR1A|=(Config_Ptr->mode_functionality)<<COM1A0;

/**************************Pre_scaler*******************************/

	TCCR1B|=Config_Ptr->prescaler;

/*************************Initial values*****************************/

	TCNT1=Config_Ptr->initial_value;

/* OCR1A value = F_CPU/pre_scaler= number of times needed to reach 1 second
   then * compare value (Number of seconds you want to compare with)        */

	switch(Config_Ptr->prescaler){
	case 1:OCR1A=(F_CPU/1)*(Config_Ptr->compare_value);
	break;
	case 2:OCR1A=(F_CPU/8)*(Config_Ptr->compare_value);
	break;
	case 3:OCR1A=(F_CPU/64)*(Config_Ptr->compare_value);
	break;
	case 4:OCR1A=(F_CPU/256)*(Config_Ptr->compare_value);
	break;
	case 5:OCR1A=(F_CPU/1024)*(Config_Ptr->compare_value);
	break;
	default: break;
	}

/*Enabling the interrupt flag for the OCF1A flag*/
	TIMSK=(1<<OCIE1A);

}
void Timer1_deInit(void){
/*Reseting the timer values*/
	TCCR1A = 0;
	TCCR1B = 0;
	TCNT1 = 0;
	OCR1A = 0;
/*Disabling the compare flag*/
	TIMSK&=~(1<<OCIE1A);
}
void Timer1_setCallBack(void(*a_ptr)(void)){
/* Save the address of the Call back function in a global variable */
	g_callBackPtr=a_ptr;
}

